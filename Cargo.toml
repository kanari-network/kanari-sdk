[workspace]
# name = "kanari-sdk"
resolver = "2"

# Exclude List
exclude = ["third_party/move"]

# Members List
members = [
  "crates/kari",
  "crates/kari-node",
  "crates/kari-move",
  "consensus/pos",
  "crates/core/network",
  "crates/core/p2p",
  "crates/core/wallet/key",
  "crates/rpc/rpc-api",
  "crates/core/k2",
  "crates/command",
  "consensus/pow",
  "framework",

  # Move Crates
  "moveos/storage",
]

[profile.bench]
debug = true
opt-level = 3
lto = "thin"
codegen-units = 1

[profile.dev]
debug = true
opt-level = 0
split-debuginfo = "unpacked"

[profile.ci]
inherits = "test"
debug = 0
incremental = false
codegen-units = 16
opt-level = 1

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
debug = false

[workspace.package]
edition = "2021"
categories = ["development-tools"]
keywords = ["blockchain", "sdk"]
homepage = "https://kanari.network"
documentation = "https://kanari.network/docs"
version = "0.1.0"
authors = ["Kanari Network"]
license = "Apache-2.0"
repository = "https://github.com/kanari-network/kanari-sdk"
description = "Kanari Network SDK"

# Dependencies Workspace
[workspace.dependencies]
# Cryptography
crypto = "0.5.1"
digest = "0.10.7"
sha2 = "0.10.8"
blake3 = "1.5.3"
hex = "0.4.3"
secp256k1 = { version = "0.30.0", features = ["rand"] }
chacha20poly1305 = "0.10.1"
argon2 = "0.5.3"

once_cell = "1.20.2"
tracing = "0.1.41"

# Serialization
bincode = "1.3"
serde = { version = "1.0.217", features = ["derive", "rc"] }
serde_json = { version = "1.0.134", features = [
  "preserve_order",
  "arbitrary_precision",
] }
serde_yaml = "0.9.33"
toml = "0.8.19"
toml_edit = "0.22.22"
bcs = "0.1.4"

# RPC and Networking
jsonrpc-core = "18.0"
jsonrpc-http-server = "18.0"
futures = "0.3.30"
tokio = { version = "1", features = ["full"] }

# Utilities
rand = "0.8.5"
bip39 = { version = "2.0.0", features = ["rand"] }
chrono = "0.4.38"
dirs = "6.0.0"
walkdir = "2.3.2"
difference = "2.0.0"
tempfile = "3.3.0"
crossbeam = "0.8.4"

# Logging and Error Handling
log = "0.4.25"
env_logger = "0.11.6"
lazy_static = "1.5.0"
anyhow = "1.0.95"
thiserror = "2.0.11"

# CLI and Output
clap = "4.5.26"
codespan-reporting = "0.11.0"
colored = "3.0.0"

# Database
rocksdb = "0.23.0"

# Testing
datatest-stable = "0.3.2"


#Path List
kari            = { path = "crates/kari" }
kari-node       = { path = "crates/kari-node" }
kari-move       = { path = "crates/kari-move" }

#Consensus Path List
consensus-pos   = { path = "consensus/pos" }
consensus-pow   = { path = "consensus/pow" }

#Core Path List
network         = { path = "crates/core/network" }
p2p-protocol              = { path = "crates/core/p2p" }
key             = { path = "crates/core/wallet/key" }
k2              = { path = "crates/core/k2" }
command         = { path = "crates/command" }

#RPC Path List
rpc-api         = { path = "crates/rpc/rpc-api" }

#Storage Path List
storage         = { path = "moveos/storage" }

framework       = { path = "framework" }


#Move SUI Path List
bytecode-interpreter-crypto         = { path = "third_party/move/crates/bytecode-interpreter-crypto" }
enum-compat-util                    = { path = "third_party/move/crates/enum-compat-util" }
invalid-mutations                   = { path = "third_party/move/crates/invalid-mutations" }
module-generation                   = { path = "third_party/move/crates/module-generation" }
move-abstract-stack                 = { path = "third_party/move/crates/move-abstract-stack" }
move-binary-format                  = { path = "third_party/move/crates/move-binary-format" }
move-borrow-graph                   = { path = "third_party/move/crates/move-borrow-graph" }
move-bytecode-source-map            = { path = "third_party/move/crates/move-bytecode-source-map" }
move-bytecode-utils                 = { path = "third_party/move/crates/move-bytecode-utils" }
move-bytecode-verifier              = { path = "third_party/move/crates/move-bytecode-verifier" }
move-bytecode-verifier-meter        = { path = "third_party/move/crates/move-bytecode-verifier-meter" }
move-bytecode-viewer                = { path = "third_party/move/crates/move-bytecode-viewer" }
move-cli                            = { path = "third_party/move/crates/move-cli" }
move-command-line-common            = { path = "third_party/move/crates/move-command-line-common" }
move-compiler                       = { path = "third_party/move/crates/move-compiler" }
move-core-types                     = { path = "third_party/move/crates/move-core-types" }
move-coverage                       = { path = "third_party/move/crates/move-coverage" }
move-disassembler                   = { path = "third_party/move/crates/move-disassembler" }
move-docgen                         = { path = "third_party/move/crates/move-docgen" }
move-errmapgen                      = { path = "third_party/move/crates/move-errmapgen" }
move-ir-compiler                    = { path = "third_party/move/crates/move-ir-compiler" }
move-ir-to-bytecode                 = { path = "third_party/move/crates/move-ir-to-bytecode" }
move-ir-to-bytecode-syntax          = { path = "third_party/move/crates/move-ir-to-bytecode-syntax" }
move-ir-types                       = { path = "third_party/move/crates/move-ir-types" }
move-model                          = { path = "third_party/move/crates/move-model" }
move-package                        = { path = "third_party/move/crates/move-package" }
move-proc-macros                    = { path = "third_party/move/crates/move-proc-macros" }
move-prover                         = { path = "third_party/move/crates/move-prover" }
move-prover-test-utils              = { path = "third_party/move/crates/move-prover-test-utils" }
move-read-write-set-types           = { path = "third_party/move/crates/move-read-write-set-types" }
move-stackless-bytecode             = { path = "third_party/move/crates/move-stackless-bytecode" }
move-stackless-bytecode-interpreter = { path = "third_party/move/crates/move-stackless-bytecode-interpreter" }
move-stdlib                         = { path = "third_party/move/crates/move-stdlib" }
move-stdlib-natives                 = { path = "third_party/move/crates/move-stdlib-natives" }
move-symbol-pool                    = { path = "third_party/move/crates/move-symbol-pool" }
move-transactional-test-runner      = { path = "third_party/move/crates/move-transactional-test-runner" }
move-unit-test                      = { path = "third_party/move/crates/move-unit-test" }
move-vm-config                      = { path = "third_party/move/crates/move-vm-config" }
move-vm-profiler                    = { path = "third_party/move/crates/move-vm-profiler" }
move-vm-runtime                     = { path = "third_party/move/crates/move-vm-runtime" }
move-vm-test-utils                  = { path = "third_party/move/crates/move-vm-test-utils" }
move-vm-types                       = { path = "third_party/move/crates/move-vm-types" }
prover_bytecode                     = { path = "third_party/move/crates/move-stackless-bytecode", package = "move-stackless-bytecode" }
